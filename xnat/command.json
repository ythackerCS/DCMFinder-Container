{
  "name": "dcmFinder",
  "label": "covidMortlaityEXP1",
  "description": "Create csv file with dcm matched to mortality classification",
  "version": "1.0",
  "schema-version": "1.0",
  "image": "registry.nrg.wustl.edu/docker/nrg-repo/yash/model-datacsv:latest",
  "type": "docker",
  "command-line": "python newtogether.py #FILENAME# #DATASETSIZE# #FORFILTERS# #AGAINSTFILTERS# #TIMEFILTERS#",
  "override-entrypoint": true,
  "mounts": [
    {
      "name": "in",
      "writable": false,
      "path": "/input"
    },
    {
      "name": "out",
      "writable": true,
      "path": "/output"
    }
  ],
  "environment-variables": {
    "PROJECT": "#PROJECT#"
  },
  "ports": {},
  "inputs": [
    {
      "name": "filename",
      "label": null,
      "description": "Name of final file to save (do not include '.csv')",
      "type": "string",
      "matcher": null,
      "default-value": "",
      "required": false,
      "replacement-key": "#FILENAME#",
      "sensitive": null,
      "command-line-flag": "-n",
      "command-line-separator": " ",
      "true-value": null,
      "false-value": null,
      "select-values": [],
      "multiple-delimiter": null
    },
    {
      "name": "datesetsize",
      "label": null,
      "description": "Max number of dcm you want in dataset",
      "type": "string",
      "matcher": null,
      "default-value": "",
      "required": false,
      "replacement-key": "#DATASETSIZE#",
      "sensitive": null,
      "command-line-flag": "-s",
      "command-line-separator": " ",
      "true-value": null,
      "false-value": null,
      "select-values": [],
      "multiple-delimiter": null
    },
    {
      "name": "forfilters",
      "label": null,
      "description": "Filters to that match will be dicom that are kept e.g. 'Modality','DX' 'Modality','CX' 'Modality','CR' will keep only DX,CX, and CR modalities NOTE: NO spaces between dcmtag and filter ONLY PUT SPACES BETWEEN FILTERS",
      "type": "string",
      "matcher": null,
      "default-value": "",
      "required": false,
      "replacement-key": "#FORFILTERS#",
      "sensitive": null,
      "command-line-flag": "-f",
      "command-line-separator": " ",
      "true-value": null,
      "false-value": null,
      "select-values": [],
      "multiple-delimiter": null
    },
    {
      "name": "againstfilters",
      "label": null,
      "description": "Filters to that match will be dicom that are removed e.g. 'Modality','SR' will remove all SR dcm NOTE: NO spaces between dcmtag and filter ONLY PUT SPACES BETWEEN FILTERS",
      "type": "string",
      "matcher": null,
      "default-value": "",
      "required": false,
      "replacement-key": "#AGAINSTFILTERS#",
      "sensitive": null,
      "command-line-flag": "-a",
      "command-line-separator": " ",
      "true-value": null,
      "false-value": null,
      "select-values": [],
      "multiple-delimiter": null
    },
    {
      "name": "timefilters",
      "label": null,
      "description": "The two filters will be used to create a range check i.e 'AcquisitionDate','AcquisitionTime',72 --> Filter dicom obtained within first 72 hours using acq date and time compared to 'ecounter_end' in cohort.csv",
      "type": "string",
      "matcher": null,
      "default-value": "",
      "required": false,
      "replacement-key": "#TIMEFILTERS#",
      "sensitive": null,
      "command-line-flag": "-t",
      "command-line-separator": " ",
      "true-value": null,
      "false-value": null,
      "select-values": [],
      "multiple-delimiter": null
    },
    {
      "name": "project-label",
      "label": null,
      "description": "",
      "type": "string",
      "matcher": null,
      "default-value": null,
      "required": true,
      "replacement-key": "#PROJECT#",
      "sensitive": null,
      "command-line-flag": null,
      "command-line-separator": null,
      "true-value": null,
      "false-value": null,
      "select-values": [],
      "multiple-delimiter": null
    }
  ],
  "outputs": [
    {
      "name": "output",
      "description": "The output is a csv with each dcm matched to their motality classification",
      "required": true,
      "mount": "out",
      "path": null,
      "glob": null
    }
  ],
  "xnat": [
    {
      "name": "Runs dcmfinder container with project mounted",
      "label": "Runs dcmfinder container with project mounted",
      "description": "",
      "contexts": [
        "xnat:projectData"
      ],
      "external-inputs": [
        {
          "name": "project",
          "label": null,
          "description": "Input project",
          "type": "Project",
          "matcher": null,
          "default-value": null,
          "required": true,
          "replacement-key": null,
          "sensitive": null,
          "provides-value-for-command-input": null,
          "provides-files-for-command-mount": "in",
          "via-setup-command": null,
          "user-settable": null,
          "load-children": true
        }
      ],
      "derived-inputs": [
        {
          "name": "project-label",
          "label": "project-label",
          "description": "",
          "type": "string",
          "matcher": null,
          "default-value": null,
          "required": true,
          "replacement-key": null,
          "sensitive": null,
          "provides-value-for-command-input": "project-label",
          "provides-files-for-command-mount": null,
          "user-settable": null,
          "load-children": true,
          "derived-from-wrapper-input": "project",
          "derived-from-xnat-object-property": "label",
          "via-setup-command": null,
          "multiple": false,
          "parser": null
        }
      ],
      "output-handlers": [
        {
          "name": "output-resource",
          "accepts-command-output": "output",
          "via-wrapup-command": null,
          "as-a-child-of": "project",
          "type": "Resource",
          "label": "csvLocation",
          "format": null,
          "description": null,
          "content": null,
          "tags": []
        }
      ]
    }
  ],
  "container-labels": {},
  "generic-resources": {},
  "ulimits": {}
}
